[runtime]
sampler = maxlike

[maxlike]
maxiter = 1000
tolerance = 0.01
output_ini = output/demo4-maxlike-values.ini

[output]
filename = output/demo4.txt
format = text
verbosity= debug
quiet=F

[pipeline]
modules = consistency camb planck
values = demos/values4.ini

; We are now asking for some likelihoods
; at the end of the pipeline.  When doing
; MCMC this line specified the likelihoods to use
; for the acceptance.  Otherwise it just gets
; printed out
; You can also just leave out this parameter and any
; likelihoods that are found will be used automatically
likelihoods = planck2018

[planck]
planck_path = likelihood/planck2018/baseline/plc_3.0
file = likelihood/planck2018/planck_interface.so
data_1 = %(planck_path)s/hi_l/plik/plik_rd12_HM_v22b_TTTEEE.clik
data_2 = %(planck_path)s/low_l/commander/commander_dx12_v3_2_29.clik
data_3 = %(planck_path)s/low_l/simall/simall_100x143_offlike5_EE_Aplanck_B.clik




[camb]
file = boltzmann/camb/camb_interface.py
mode = cmb
lmax = 2800          ;max ell to use for cmb calculation
feedback=0           ;amount of output to print
AccuracyBoost=1.1    ;CAMB accuracy boost parameter
do_tensors = True    ;include tensor modes
do_lensing = true    ;lensing is required w/ Planck data
NonLinear = lens
high_ell_template=boltzmann/camb/camb_Jan15/HighLExtrapTemplate_lenspotentialCls.dat
halofit_version = takahashi


; The consistency module translates between our chosen parameterization
; and any other that modules in the pipeline may want (e.g. camb)
[consistency]
file = ./utility/consistency/consistency_interface.py
