[runtime]
sampler = grid

[grid]
nsample_dimension=20

[test]
save_dir=output/demo11
;save=demo11/data

[output]
filename=output/demo11.txt
format=text
fatal_errors=F

[pipeline]
; we have replaced our camb with isitgr here instead
modules = consistency isitgr load_nz shear_shear_mg 2pt cfhtlens
values = demos/values11.ini
extra_output =
quiet=T
debug=F
timing=F

[consistency]
file = ./utility/consistency/consistency_interface.py

[isitgr]
file = ./boltzmann/isitgr/camb.so
mode = all
use_r_function = F
scale_dependent = F
nz_background = 301
zmin=0.0
zmax=3.0
nz=150
do_nonlinear = T


[load_nz]
file = ./number_density/load_nz_fits/load_nz_fits.py
nz_file = ././likelihood/cfhtlens/cfhtlens_heymans13.fits
data_sets=SAMPLE

; This module uses the Limber approximation to compute shear-shear C_ell
; given the shear kernel (which is derived from the number density and 
; from geometry)

[shear_shear_mg]
file = ./structure/projection/project_2d.py
ell_min_logspaced = 20.0
ell_max_logspaced = 10000.0
n_ell_logspaced = 150
PPFshear-PPFshear = sample-sample
verbose = F



;This Nicaea code converts C_ell into xi(theta).
;It is fast and accurate but requires a high ell_max, as shown above
[2pt]
file = ./shear/cl_to_xi_nicaea/nicaea_interface.so

[cfhtlens]
file = ./likelihood/2pt/2pt_like.py
data_file=././likelihood/cfhtlens/cfhtlens_heymans13.fits
gaussian_covariance=F
covmat_name=COVMAT
cut_zeros=F
data_sets=all
covariance_realizations = 1656
like_name=cfhtlens
data_sets = xi_plus xi_minus

angle_range_xi_plus_1_1 = 2.0  999999.0
angle_range_xi_plus_1_2 = 2.0  999999.0
angle_range_xi_plus_1_3 = 2.0  999999.0
angle_range_xi_plus_1_4 = 2.0  999999.0
angle_range_xi_plus_1_5 = 2.0  999999.0
angle_range_xi_plus_1_6 = 2.0  999999.0
angle_range_xi_plus_2_2 = 2.0  999999.0
angle_range_xi_plus_2_3 = 2.0  999999.0
angle_range_xi_plus_2_4 = 2.0  999999.0
angle_range_xi_plus_2_5 = 2.0  999999.0
angle_range_xi_plus_2_6 = 2.0  999999.0
angle_range_xi_plus_3_3 = 2.0  999999.0
angle_range_xi_plus_3_4 = 2.0  999999.0
angle_range_xi_plus_3_5 = 2.0  999999.0
angle_range_xi_plus_3_6 = 2.0  999999.0
angle_range_xi_plus_4_4 = 2.0  999999.0
angle_range_xi_plus_4_5 = 2.0  999999.0
angle_range_xi_plus_4_6 = 2.0  999999.0
angle_range_xi_plus_5_5 = 2.0  999999.0
angle_range_xi_plus_5_6 = 2.0  999999.0
angle_range_xi_plus_6_6 = 2.0  999999.0


angle_range_xi_minus_1_1 = 2.0  999999.0
angle_range_xi_minus_1_2 = 2.0  999999.0
angle_range_xi_minus_1_3 = 2.0  999999.0
angle_range_xi_minus_1_4 = 2.0  999999.0
angle_range_xi_minus_1_5 = 2.0  999999.0
angle_range_xi_minus_1_6 = 2.0  999999.0
angle_range_xi_minus_2_2 = 2.0  999999.0
angle_range_xi_minus_2_3 = 2.0  999999.0
angle_range_xi_minus_2_4 = 2.0  999999.0
angle_range_xi_minus_2_5 = 2.0  999999.0
angle_range_xi_minus_2_6 = 2.0  999999.0
angle_range_xi_minus_3_3 = 2.0  999999.0
angle_range_xi_minus_3_4 = 2.0  999999.0
angle_range_xi_minus_3_5 = 2.0  999999.0
angle_range_xi_minus_3_6 = 2.0  999999.0
angle_range_xi_minus_4_4 = 2.0  999999.0
angle_range_xi_minus_4_5 = 2.0  999999.0
angle_range_xi_minus_4_6 = 2.0  999999.0
angle_range_xi_minus_5_5 = 2.0  999999.0
angle_range_xi_minus_5_6 = 2.0  999999.0
angle_range_xi_minus_6_6 = 2.0  999999.0

