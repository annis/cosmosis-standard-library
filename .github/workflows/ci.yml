# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Continuous Integration

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]


jobs:
  conda_test:
    name: Conda Test
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: cosmosis-env
          channels: conda-forge
          python-version: 3.9

      - name: Install dependencies with conda
        shell: bash -l {0}
        run: conda install -c conda-forge cosmosis cosmosis-build-standard-library

      - name: Build standard library
        shell: bash -l {0}
        run: |
          source cosmosis-configure
          make

      - name: CAMB Planck
        shell: bash -l {0}
        run: |
          # print out the configuration
          python -m cosmosis.configure
          source cosmosis-configure
          export
          mkdir output
          # Check the downloader works
          ./examples/get-planck-data.sh
          # And that the pipeline runs afterwards
          cosmosis examples/planck.ini | tee output/planck.log
          grep 'Likelihood =  -6288.61' output/planck.log

      - name: Class Planck
        shell: bash -l {0}
        run: |
          source cosmosis-configure
          cosmosis examples/planck_class.ini | tee output/class.log
          # This may need updating as we modify the class interface
          # The settings are not optimized
          # grep 'Likelihood =  -5968.93' output/class.log
          # This seems to give different results on different systems

      - name: Pantheon emcee
        shell: bash -l {0}
        run: |
          source cosmosis-configure
          cosmosis examples/pantheon.ini -p emcee.samples=20
          cosmosis-postprocess examples/pantheon.ini -o output/pantheon
          test -f output/pantheon/cosmological_parameters--omega_m.png

      - name: DES Y1 likelihood
        shell: bash -l {0}
        run: |
          source cosmosis-configure
          cosmosis examples/des-y1.ini | tee output/des-y1.log
          grep 'Likelihood =  5237.37' output/des-y1.log

      - name: DES Y3 likelihood
        shell: bash -l {0}
        run: |
          source cosmosis-configure
          cosmosis examples/des-y3.ini | tee output/des-y3.log
          grep 'Likelihood =  6043.23' output/des-y3.log

      - name: Run Demos
        shell: bash -l {0}
        run: |
          .github/run-demos.sh




  apt-get-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8, 3.9]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        submodules: true

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install apt dependencies
      run: |
        sudo apt-get update
        sudo apt-get -y install gfortran-7 swig libopenmpi-dev openmpi-bin libopenblas-dev
        sudo ln -s `which gfortran-7` /usr/local/bin/gfortran
        sudo apt-get -y install libgsl-dev libfftw3-bin libfftw3-dev libfftw3-3 autotools-dev  autoconf libcfitsio-dev


    - uses: actions/cache@v2
      name: Load pip cache
      id: cache-pip
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('**/setup.py') }}-v2

    - uses: actions/cache@v2
      name: Planck Data Cache
      id: cache-planck
      with:
        path: likelihood/planck2018/baseline
        key: ${{ runner.os }}-planck-2018

    - name: Install python dependencies
      run: |
        python -m pip install --upgrade pip wheel setuptools
        pip install cosmosis
        pip install --no-binary=mpi4py,camb mpi4py camb
        pip install fitsio astropy fast-pt Cython

    - name: Build
      run: |
        source .github/ci-setup.sh && make

    - name: Download Planck 2018 Data
      if: steps.cache-planck.outputs.cache-hit != 'true'
      run: |
          cd likelihood/planck2018
          curl "http://pla.esac.esa.int/pla/aio/product-action?COSMOLOGY.FILE_ID=COM_Likelihood_Data-baseline_R3.00.tar.gz" -o COM_Likelihood_Data-baseline_R3.00.tar.gz
          tar -zxvf COM_Likelihood_Data-baseline_R3.00.tar.gz

    # I have seen some failures here
    - name: Check camb installation
      run: |
        source .github/ci-setup.sh
        python -c "import camb"


    - name: Demo 2 Planck 2018 Likelihood
      run: |
        source .github/ci-setup.sh
        cosmosis demos/demo2.ini
        cosmosis-postprocess demos/demo2.ini -o output/demo2
        test -f output/demo2/comoving_distance.png
        python .github/ci-checks.py


    - name: Demo 9 Low-Resolution Multinest
      run: |
        source .github/ci-setup.sh
        cosmosis demos/demo9.ini -p multinest.live_points=100
        cosmosis-postprocess output/demo9.txt -o output/demo9
        test -f output/demo9/2D_supernova_params--deltam_cosmological_parameters--omega_m.png
